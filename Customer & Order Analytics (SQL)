-- This project queries multiple tables within a database to quantify statistics about customer and order data. --

SELECT *
FROM BIT_DB.customers
ORDER BY order_id ASC;

SELECT *
FROM BIT_DB.JanSales;
 
-- How many orders were placed in January? --

SELECT COUNT (OrderID)
FROM BIT_DB.JanSales
WHERE LENGTH (OrderID) = 6
AND OrderID IS NOT NULL;

-- How many of those orders were for an iPhone? --

SELECT COUNT (OrderID)
FROM BIT_DB.JanSales
WHERE LENGTH (OrderID) = 6
AND OrderID IS NOT NULL
AND product = "iPhone";

-- Select the customer account numbers for all the orders that were placed in February. --

SELECT DISTINCT (acctnum)
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
 ON customers.order_id = FebSales.orderID
WHERE LENGTH (OrderID) = 6
AND OrderID IS NOT NULL;

-- Which product was the cheapest one sold in January, and what was the price? --

SELECT Product, price
FROM BIT_DB.JanSales
WHERE Length (orderID) = 6
AND orderID IS NOT NULL
ORDER BY price ASC
LIMIT 1;

or;

SELECT Product, MIN (price)
FROM BIT_DB.JanSales
WHERE Length (orderID) = 6
AND orderID IS NOT NULL
LIMIT 1;

-- What is the total revenue for each product sold in January? --

SELECT Product, SUM (Quantity) * price AS "Revenue"
FROM BIT_DB.JanSales
WHERE Length (orderID) = 6
AND orderID IS NOT NULL
GROUP BY 1
ORDER BY 2 ASC;


--List all the products sold in Los Angeles in February, and include how many of each were sold. --

SELECT product, SUM (quantity)
FROM BIT_DB.FebSales
WHERE orderdate LIKE '02/%'
AND location LIKE '%Los Angeles%'
GROUP BY 1
ORDER BY 2 DESC;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue? --

SELECT product, quantity, SUM (quantity)*price AS Revenue
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"
GROUP BY 1
ORDER BY 3 ASC;

--How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers? --

SELECT COUNT (DISTINCT customers.acctnum), ROUND (AVG(quantity*Price), 2) AS "AVG_Spent"
FROM BIT_DB.customers
JOIN BIT_DB.FebSales
 ON customers.order_id = FebSales.orderID
WHERE LENGTH (orderID) = 6
AND quantity > 2;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive? --

SELECT location, SUM (Quantity)
FROM BIT_DB.JanSales
WHERE location LIKE '%New York%'
GROUP BY location
HAVING SUM (Quantity) >= 3
ORDER BY 2 ASC;

-- How many of each type of headphone were sold in February? --

SELECT Product, SUM (Quantity)
FROM BIT_DB.FebSales
WHERE Product LIKE '%Headphone%'
GROUP BY Product
ORDER BY 2 ASC;

-- What was the average amount spent per account in February? --

SELECT ROUND (SUM(quantity*price) / COUNT (acctnum), 4) AS "avg_amount_ per_Feb_accounts"
FROM BIT_DB.FebSales
JOIN BIT_DB.customers
 ON FebSales.orderID = customers.order_id
WHERE length (FebSales.orderID) = 6
AND orderID <> "Order ID"

-- What was the average quantity of products purchased per account in February? --

SELECT SUM (FebSales.Quantity) / COUNT (customers.acctnum)
FROM BIT_DB.FebSales
LEFT JOIN BIT_DB.customers
 ON FebSales.orderID = customers.order_id
WHERE length (FebSales.orderID) = 6
AND orderID <> "Order ID";

-- Which product brought in the most revenue in January and how much revenue did it bring in total? --

SELECT Product, SUM (Quantity) * price AS "Revenue"
FROM BIT_DB.JanSales
WHERE orderID IS NOT NULL
AND length (orderID) = 6
AND orderID <> "Order ID"
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;
