-- Write a query to show all Customers who are not in the US. --

SELECT CustomerID, FirstName, LastName, Country
FROM customers
WHERE Country <> 'USA';


--Write a query to Show only the Customers from Brazil. --

SELECT CustomerID, FirstName, LastName, Country
FROM customers
WHERE Country = 'Brazil';


-- Find the Invoices of customers who are from Brazil. --

SELECT InvoiceID, FirstName, LastName, InvoiceDate, BillingCountry
FROM customers
LEFT JOIN invoices
 On customers.CustomerId = invoices.CustomerId
WHERE BillingCountry = 'Brazil';

-- Show the Employees who are Sales Agents. --

SELECT EmployeeID, FirstName, LastName, Title, Country, Email
FROM employees
WHERE Title = 'Sales Support Agent';

-- Find a unique/distinct list of billing countries from the Invoice table. --

SELECT DISTINCT BillingCountry
FROM invoices;

-- Provide a query that shows the invoices associated with each sales agent. --

SELECT employees.EmployeeId, employees.FirstName, employees.LastName, employees.Title, invoices.InvoiceId
FROM customers
JOIN employees
 ON customers.SupportRepId = employees.EmployeeId
JOIN invoices
 ON customers.CustomerId = invoices.CustomerId;

-- Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers. --

SELECT customers.CustomerId, customers.FirstName, customers.LastName, customers.Country, employees.FirstName, employees.LastName, invoices.Total
FROM customers
JOIN employees
 ON customers.SupportRepId = employees.EmployeeId
JOIN invoices
 ON customers.CustomerId = invoices.CustomerId;


-- How many Invoices were there in 2009? --

SELECT COUNT (InvoiceId)
FROM invoices
WHERE InvoiceDate LIKE '%2009%'

-- or --

SELECT COUNT(*)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

-- What are the total sales for 2009? -- 

SELECT SUM (Total)
FROM invoices
WHERE InvoiceDate LIKE '%2009%'

-- or --

SELECT SUM(Total)
FROM invoices
WHERE InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31';

-- Write a query that includes the purchased track name with each invoice line ID. --

SELECT invoice_items.InvoiceLineId, tracks.Name
FROM invoice_items
JOIN tracks
 ON invoice_items.TrackId = tracks.TrackId
 ORDER BY InvoiceLineId ASC;

-- Write a query that includes the purchased track name AND artist name with each invoice line ID. --

SELECT invoice_items.InvoiceLineId, tracks.Name, artists.Name
FROM invoice_items
JOIN tracks
 ON invoice_items.TrackId = tracks.TrackId
JOIN albums
 ON tracks.AlbumId = albums.AlbumId
JOIN artists
 ON albums.ArtistId = artists.ArtistId;

-- Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre. --


SELECT tracks.Name AS Track, albums.Title AS Album, media_types.Name AS Media, genres.Name AS Genre
FROM tracks
JOIN albums
 ON tracks.AlbumId = albums.AlbumId
JOIN media_types
 ON tracks.MediaTypeId = media_types.MediaTypeId
JOIN genres
 ON tracks.GenreId = genres.GenreId;


-- Show the total sales made by each sales agent. --

SELECT CONCAT(employees.FirstName, ' ', employees.LastName) AS Employee_Name, ROUND (SUM (invoices.total), 2) AS Total_Sales
FROM employees
JOIN customers
 ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
 ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent'
GROUP BY employees.FirstName, employees.LastName;

-- Which sales agent made the most dollars in sales in 2009? --

SELECT CONCAT(employees.FirstName, ' ', employees.LastName) AS Employee_Name, ROUND (SUM (invoices.total), 2) AS Total_Sales
FROM employees
JOIN customers
 ON employees.EmployeeId = customers.SupportRepId
JOIN invoices
 ON customers.CustomerId = invoices.CustomerId
WHERE employees.Title = 'Sales Support Agent'
AND invoices.InvoiceDate LIKE '%2009%'
GROUP BY employees.FirstName, employees.LastName;
